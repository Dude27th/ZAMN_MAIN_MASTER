#library "MonsterPlayer"
#include "zcommon.acs"
#include "CUValues.acs"
  
//Monster Player Class::
//-------------------------------------------------------------------------- 
   
Script "MorphMonster" (void)
{
	if(CheckInventory("ZekeToken")==1)
		{ MorphActor(0,"ZEKE_MONSTER","",STAY_MORPHED,MRF_FULLHEALTH|MRF_ADDSTAMINA|MRF_WHENINVULNERABLE|MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash"); 
		  SetPlayerProperty(FALSE, OFF, PROP_TOTALLYFROZEN);		}
	else
		{ MorphActor(0,"JULIE_MONSTER","",STAY_MORPHED,MRF_FULLHEALTH|MRF_ADDSTAMINA|MRF_WHENINVULNERABLE|MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash"); 
		  SetPlayerProperty(FALSE, OFF, PROP_TOTALLYFROZEN);		}
	//print(s: "ScriptMorphed");
	ACS_NamedExecuteAlways("CleanWeaponTokens",0,0,0,0);
	TakeInventory("DoMonsterToken",1);
	GiveInventory("MonsterToken",1);
	GiveInventory("MonsterFists",1);
	GiveInventory("MonsterTime",1400);
	SetWeapon("MonsterFists");
	//
	
	while("MonsterTime" >= 1)
	{ Delay(1);		/*Delay to do what tho ??*/}

} 

Script "GiveOwnX" (void)
{
	int OwnX= 0;
	OwnX = GetActorX(0);
	SetResultValue(OwnX);
}

Script "GiveOwnY" (void)
{
	int OwnY= 0;
	OwnY = GetActorY(0);
	SetResultValue(OwnY);
}

Script "GiveOwnZ" (void)
{
	int OwnZ= 0;
	OwnZ = GetActorZ(0);
	SetResultValue(OwnZ);
}

// Methods !!

Script "HealthCount" (void)
	{
	Thing_Stop(0);
	//ACS_NamedExecuteAlways("MorphingFroze",0,0,0,0);	//Deprecated, these properties are set in the state or by other scripts.
	int HealthTotal = 100;
	int HealthTake = 0;
	int HealthHave = 0;
	HealthHave = (GetActorProperty(0,APROP_HEALTH));
	
	if(HealthHave < 10)
	{
		//print(s: "Health less than 10");
		HealthHave = 10;
	}
		
	
	//ACS_NamedExecuteAlways("CheckHealthHave",0,HealthHave,0,0);
	//print(s: StrParam(s: "HealthHave: ", i: HealthHave));
	
	if(HealthTotal == HealthHave||HealthTotal < HealthHave)
		{	HealthTake = 0;
			GiveInventory("NoPainToken",1);}
	else
		{	HealthTake = (HealthTotal - HealthHave);
			GiveInventory("NoPainToken",1);}
	
	Delay(100);	//MorphAnimation
	if(HealthTake > 0)	//Bugfix
		SetActorProperty(0,APROP_HEALTH,HealthHave);
	Delay(11);	//MorphAnimation
	
	while((CheckInventory("MonsterTime")>0)||(CheckInventory("GhostTime")>0))
		{ Delay(1); }
	if(HealthTake > 0)
		//DamageThing(HealthTake);
		//TakeInventory("Health",HealthTake);
		SetActorProperty(0,APROP_HEALTH,HealthHave);
			
	//Delay(1);
	ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0);
	//print(s: StrParam(s: "HealthSet: ", i: HealthHave));
	
	HealthTake = 0;
	}
	
//Ghost Player Class::
//--------------------------------------------------------------------------

Script "MorphGhost" (void)
{
	if(CheckInventory("ZekeToken")==1)
		{ MorphActor(0,"ZEKE_GHOST","",STAY_MORPHED,MRF_FULLHEALTH|MRF_ADDSTAMINA|MRF_WHENINVULNERABLE|MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash"); 
		  SetPlayerProperty(FALSE, OFF, PROP_TOTALLYFROZEN);		}
	else
		{ MorphActor(0,"JULIE_GHOST","",STAY_MORPHED,MRF_FULLHEALTH|MRF_ADDSTAMINA|MRF_WHENINVULNERABLE|MRF_LOSEACTUALWEAPON,"NoFlash","NoFlash"); 
		  SetPlayerProperty(FALSE, OFF, PROP_TOTALLYFROZEN);		}
	//print(s: "ScriptMorphed");
	ACS_NamedExecuteAlways("CleanWeaponTokens",0,0,0,0);
	TakeInventory("DoGhostToken",1);
	GiveInventory("GhostToken",1);
	GiveInventory("GhostWeapon",1);
	GiveInventory("GhostTime",1400);
	ACS_NamedExecuteAlways("GhostCollision",0,0,0,0);
	SetWeapon("GhostWeapon");
	//
	
	while("GhostTime" >= 1)
	{ Delay(1);		/*Delay to do what tho ??*/}

} 

Script "GhostCollision" (void)
{
	while(CheckInventory("GhostToken")>0)
	{
		//if()//Solid decoration on the way
		//{}
		//else
		//{
			if(CheckProximity(0, "MonsterClass_ZAMN", 64.0, 1, CPXF_ANCESTOR))
			{
				HudMessage(s: "Can Pass";HUDMSG_PLAIN,0,0,0.5,0.5,HUDTIME_ONETIC);
				SetActorFlag(0, "SOLID", FALSE);
			}
			else
			{
				HudMessage(s: "Blocked";HUDMSG_PLAIN,0,0,0.5,0.5,HUDTIME_ONETIC);
				SetActorFlag(0, "SOLID", TRUE);
			}
		//}

	Delay(1);
	}
}