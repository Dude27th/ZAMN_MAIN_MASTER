//////////////////////////////////////////////////////////////////////////
////																  ////
////						PLAYER CLASSES							  ////
////																  ////
////////////////////////////////////////////////////////////////////////// 

ACTOR ZAMN_PLAYER : PlayerPawn	//Base ZAMN Player Class
{
	Player.ForwardMove 2.0, 1.0
	Player.SideMove 2.0, 1.0
	Player.ViewBob 0.580
	Player.AirCapacity 0
	Speed 0.56
	Health 100
	Radius 14
	Height 40
	Mass 900
	Alpha 0.5
	Friction 0.99999999999999999999990000000
	PainChance 256
	MaxStepHeight 16
	Species "Player_Actor"	//Test
		
	/*
	"Player.StartItem"s are not inherited, 
	they need to be added to each class.
	*/

	DamageFactor "MonsterFist",0
	DamageFactor "Water",0
	DamageFactor "Bazooka", 0	
	DamageFactor "Soda", 0
	DamageFactor "Tomatoes", 0	
	DamageFactor "WeedWacker", 0	
	DamageFactor "FireExtinguisher", 0	
	DamageFactor "Crucifix", 0
	
	DamageFactor "PyramidWall", 0
    DamageFactor "TitanicStomp", 0
	Player.MaxHealth 100
	Player.JumpZ 6
	Player.ViewHeight 42
	Player.DamageScreenColor "Red", 0.0
	+NOBLOOD
	+NOEXTREMEDEATH
	+THRUSPECIES	//TEST
	+NOTELEFRAG
	+BUDDHA
	-INVULNERABLE
	-NOPAIN
  States
	{
  Spawn:
	PLA1 A 1
	Loop

 /* Pain.RedBlob:
	TNT1 AAAAAAAAAAA 0
	TNT1 A 0 A_JumpIf(CallACS("CheckGoo") == 1,"NoGoo")
	TNT1 A 0 A_JumpIfInventory("InWater",1,"NoGoo")
	TNT1 A 0 A_GiveInventory("GooTimer",280)
	TNT1 A 0 ACS_NamedExecuteAlways("GooDamage",0,0,0,0)
  Goto NoGoo*/

//This doesn't inherit properly	:/
/*Pain.FootballTackle_Right:
	TNT1 A 0 A_SetAngle(180,0,0)	//Set Looking Left
	TNT1 A 0 A_Recoil(10)
  Goto FootballTackleWait
  Pain.FootballTackle_Left:
	TNT1 A 0 A_SetAngle(0,0,0)		//Set Looking Right
	TNT1 A 0 A_Recoil(10)
  Goto FootballTackleWait

  FootballTackleWait:		//WIP
	TNT1 A 1 //Fake
	Loop*/

  Pain:
	TNT1 A 1
	Loop
  //NoGoo:
//	TNT1 A 0
  //Goto Pain
  
  Death:
	TNT1 A -1
	Stop
  XDeath:
    TNT1 A -1
	Stop
  XDeath1:
    TNT1 A -1
	Stop
  AltSkinDeath:
    TNT1 A -1
	Stop
  AltSkinXDeath:
    TNT1 A -1
	Stop

  Player_RandomDecide:	//I don't have exact probability numbers so let's say 16% each so I guess 41/256
	TNT1 A 0 A_Jump(41, "Player_Instakit")			//Medikit
	TNT1 A 0 A_Jump(41, "Player_MonsterFinal")		//Monster
	TNT1 A 0 A_Jump(41, "GhostFinal")				//Ghost			[Needs to set first the sprite set, so specific state first, then generic]
	//TNT1 A 0 A_Jump(41, "Mr_Hyde")					//Mr Hyde Mode	[Needs to set first the sprite set, so specific state first, then generic]
	TNT1 A 0 A_Jump(41, "Player_InstaShoes")		//SpeedShoes
	TNT1 A 0 A_Jump(256, "Player_InstaHurt")			//Hurt Player
	TNT1 A 0 A_Jump(256, "Spawn")	//<-- Failsafe
	Stop
  Player_Instakit:
	TNT1 A 0 ACS_NamedExecuteAlways("MedikitHeal",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",FALSE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	TNT1 A 0 A_Jump(256, "Spawn")
	Stop
  Player_MonsterFinal:	//Generic
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TRMO ABC 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 8 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 1 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_PlaySound("Monster/Growl",0,1.5)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphMonster",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_Jump(256, "Spawn")	//Goto Spawn
	Stop
  Player_GhostFinal:
	"####" E 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	"####" E 0 A_ChangeFlag("INVULNERABLE",TRUE)
	"####" E 0 A_ChangeFlag("NOPAIN",TRUE)
	"####" EFEFEF 9 A_ChangeFlag("INVULNERABLE",TRUE)
	"####" E 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("MorphGhost",0,0,0,0)
	"####" E 0 A_TakeInventory("IsMonsterTransforming",1)
	"####" E 0 A_Jump(256, "Spawn")	//Goto Spawn
	Stop
  Player_MrHyde:	//WIP
	"####" E 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	"####" E 0 A_ChangeFlag("INVULNERABLE",TRUE)
	"####" E 0 A_ChangeFlag("NOPAIN",TRUE)
	"####" EFEFEF 9 A_ChangeFlag("INVULNERABLE",TRUE)
	"####" E 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	"####" E 0 ACS_NamedExecuteAlways("MorphGhost",0,0,0,0)
	"####" E 0 A_TakeInventory("IsMonsterTransforming",1)
	"####" E 0 A_Jump(256, "Spawn")	//Goto Spawn
	Stop
  Player_InstaShoes:
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",FALSE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	TNT1 A 0 A_GiveInventory("InstaShoes", 1)
	TNT1 A 0 A_Jump(256, "Spawn")
	Stop
  Player_InstaHurt:
	TNT1 A 0 A_GiveInventory("NoHelper", 1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",FALSE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	TNT1 A 0 ACS_NamedExecuteAlways("HurtPlayer",0,0,0,0)
	TNT1 A 0 A_Jump(256, "Spawn")
	Stop
	}
}



ACTOR ZEKE_PLAYER : ZAMN_PLAYER
{
	
	Player.StartItem "WTRGUN_Z", 1
	Player.StartItem "WTRGUN_Z_Ammo", 150
	Player.StartItem "ZekeTicket", 1
	//
	
	Player.StartItem "MedikitPickup", 1
	Player.StartItem "RadarActive", 1
	Player.StartItem "ScoreDeactive", 1
	Player.StartItem "ScoreNoCheck", 1
	Player.StartItem "LifeToken", 2
	
	Player.Startitem "SelectToken", 9999
	//
	Player.DisplayName " "	//	Graphic:("PLAYER_Z")
	Player.Portrait "CLPZEK01"
	Player.CrouchSprite "P1GP"		//Universal no crouch sprite set
  States						
  {
  ////////////////////////////////////////
  //      Zombies Ate My Neighbors      //
  ////////////////////////////////////////

  Spawn:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Spawn")

	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)
	TNT1 A 0 A_TakeInventory("ToReviveD",1)
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	P1WL A 4 
	TNT1 AAA 0
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
    Goto Spawn
  See:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_See") 
		
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)	
	
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	P1WL B 1 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P1WL B 1 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL B 1 A_JumpIfInventory("SpeedyToken",1,"SeeSpeedy")
	P1WL B 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1WL C 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL C 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1WL D 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL D 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1WL E 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL E 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
    Loop
  SeeSpeedy:
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	P1WL C 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	P1WL D 3 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	P1WL E 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	Goto Spawn
  Missile:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Missile")

	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,"DeathCheckScript")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("IsTackled",1,"FootBallTackleFinal")
	TNT1 A 0 A_JumpIfInventory("BubbleTime",1,"MartianWait")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)

	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_TakeInventory("GhostWeapon",1)
	TNT1 A 0 A_TakeInventory("GhostToken",1)

	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")

	P1WL A 1 //Wait for important checks before jumping to the rest

	TNT1 A 0 A_JumpIfInventory("FalseFlag",1,"FalseFlag") // < -- >  Fix WeedWacker premature firing
	TNT1 A 0 A_JumpIfInventory("WRToken",1,"Zeke_WaterRifle")			//	{                   }
	TNT1 A 0 A_JumpIfInventory("BToken",1,"Zeke_Bazooka")				//
	TNT1 A 0 A_JumpIfInventory("SodaToken",1,"Zeke_Soda")				//	Unique firing States
	TNT1 A 0 A_JumpIfInventory("TomatoToken",1,"Zeke_Tomato")			//
	TNT1 A 0 A_JumpIfInventory("FEToken",1,"Zeke_FireExtinguisher")		//
	TNT1 A 0 A_JumpIfInventory("WeedWackerToken",1,"Zeke_WeedWacker")	//	{                   }
	TNT1 A 0 A_JumpIfInventory("CrucifixToken",1,"Zeke_Crucifix")		//
	Goto Spawn
  FalseFlag:
	P1WL A 4
	Goto Missile
  Zeke_WaterRifle:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)	
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1WG A 6	
	P1WG A 6
	Goto Spawn
  Zeke_Bazooka:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1FB A 5
	P1FB B 10
	Goto Spawn
  Zeke_Soda:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1WL A 6
	P1FS A 4
	P1FS B 4
	Goto Spawn
  Zeke_Tomato:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1FS A 4
	P1FS B 4
	Goto Spawn
  Zeke_WeedWacker:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1FW ABC 2
	TNT1 A 0 A_JumpIfinventory("WW4",1,"Zeke_WeedWacker")
	Goto Spawn
  Zeke_FireExtinguisher:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1FE A 4
	P1FE A 4
	Goto Spawn
  Zeke_Crucifix:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)	
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1FC A 20	
	Goto Spawn
  Zeke_MonsterTransform:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Zeke_MonsterTransform") 

	TNT1 A 0 //A_GiveInventory("WeaponFixer",1)
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1MP ABCBCBDE 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_Jump(256, "Player_MonsterFinal")	//<-- Generic
	Stop
  /*Zeke_MonsterFinal:
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TRMO ABC 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 8 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 1 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_PlaySound("Monster/Growl",0,1.5)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphMonster",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	Goto Spawn*/
  Zeke_GhostTransform:
	//TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Zeke_MonsterTransform") 
	TNT1 A 0 //A_GiveInventory("WeaponFixer",1)
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoGhostToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1IP ABCBCBD 9 A_ChangeFlag("INVULNERABLE",TRUE)
  GhostFinal:
	P1IP E 0 A_Jump(256, "Player_GhostFinal")
	Stop
	/*
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	P1IP EFEFEF 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphGhost",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	Goto Spawn*/
  Zeke_RandomTransform:
	//TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Zeke_MonsterTransform") 
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoRandomToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1RP ABCBCBD 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_Jump(256, "Player_RandomDecide")
	Stop
  Pain.RedBlob:
	TNT1 AAAAAAAAAAA 0
	TNT1 A 0 A_JumpIf(CallACS("CheckGoo") == 1,"NoGoo")
	TNT1 A 0 A_JumpIfInventory("InWater",1,"NoGoo")
	TNT1 A 0 A_GiveInventory("GooTimer",280)
	TNT1 A 0 ACS_NamedExecuteAlways("GooDamage",0,0,0,0)
  NoGoo:
  Pain:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Pain")

	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)	
	TNT1 A 0 A_TakeInventory("FalseFlag",1)

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	PLA1 G 1 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	PLA1 G 7 A_PlaySound("Player/Ouch",2,100)
	PLA1 H 8
	TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	Goto Spawn

  Pain.RayHazard:
	TNT1 AA 0
	TNT1 A 0 A_Stop
  Pain.FloorHazard:
    TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 ACS_NamedExecuteAlways("HazardPain",0,0,0,0)
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	PLA1 G 1 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)	// ITS OK TO HAVE THIS HERE ?
	PLA1 G 7 A_PlaySound("Player/Ouch",2,100)
	PLA1 H 8
	TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)  // ITS OK TO HAVE THIS HERE ?
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	Goto Spawn

  Pain.FootballTackle_Right:
	TNT1 A 0 ACS_NamedExecuteAlways("RotateAngleTo",0,180,0,0)//Set Looking Left
	Goto FootBallTackle
  Pain.FootballTackle_Left:
	TNT1 A 0 ACS_NamedExecuteAlways("RotateAngleTo",0,0,0,0)//Set Looking Right
	Goto FootBallTackle
  FootBallTackle:
	TNT1 A 0 A_TakeInventory("BubbleTime",50) //Cancells bubble if not initiated fully
	TNT1 A 0 A_Stop
	TNT1 A 0 //A_Log("Tackle On")
	TNT1 A 0 A_GiveInventory("IsTackled",1)
	TNT1 A 0 A_GiveInventory("Health",1)
	TNT1 A 0 A_PlaySound("player/male/fist")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
  FootBallTackleFinal:
	P1HT A 25 //A_Recoil(12) //Handled by ACS now
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 //A_Log("Tackle Off")
	P1HT A 1
	TNT1 A 0 A_TakeInventory("IsTackled",1)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOff",0,0,0,0)
  Goto See
  
  Pain.Martian:
	TNT1 A 0 A_Stop
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 A 0 //A_Log("Bubble 1")
	TNT1 A 0 A_GiveInventory("BubbleTime",50)
	//Bubble animation
	MRTR BBCCDDEEFF 1 A_TakeInventory("BubbleTime",1)
  MartianWait:
	TNT1 A 0 //A_Log("Bubble 2")
	MRTR G 1 A_TakeInventory("BubbleTime",1)
	TNT1 A 0 A_JumpIfInventory("BubbleTime",7,"MartianWait")
	//Bubble breaking
	TNT1 A 0 //A_Log("Bubble 3")
	TNT1 A 0 A_TakeInventory("IsTackled",1)
	MRTR HHIIJJ 2 A_TakeInventory("BubbleTime",1)
	//TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	MRTR J 1
  Goto See
   
  TitanicStomp:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_TitanicStomp")

	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 //A_GiveInventory("IsStomped",1)	//Managed trough the StompedPain script
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_DamageSelf(10)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson2",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("StompedPain",0,0,0,0)
	FTZK A 33 A_PlaySound("Titanic/Stomp",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTZK A 1
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTZK A 1
	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 //A_ChangeFlag("NOPAIN",FALSE)	//Handled trough "StompedPain" script.
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 AA 0 //A_TakeInventory("IsStomped",1)	//Managed by "StompedScript" now
	Goto Spawn
  TitanicNoStomp:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_TitanicNoStomp")

	P1WL B 1 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P1WL B 1 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL B 1 A_JumpIfInventory("SpeedyToken",1,"SeeSpeedy")
	P1WL B 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	P1WL C 3 A_JumpIfInventory("DoMonsterToken",1,"Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Zeke_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Zeke_RandomTransform")
	P1WL C 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	Goto See+13 //[!] Shouldn't jump by offsets, it breaks easily !!
  DeathCheck:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_DeathCheck")

	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	P1WL A 2 //<- Important: [Gives time to the "HealthCheckHelper" to repair cummulative damage]
	//TNT1 A 0 A_Log("Should be dead")
	TNT1 A 0 A_JumpIfHealthLower(2,1)
	Goto Pain
	
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_GiveInventory("DeathChecking",1)	
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 A_TakeInventory("DoGhostToken",1)
	TNT1 A 0 A_TakeInventory("DoRandomToken",1)
	TNT1 A 0 A_TakeInventory("GooTimer",9999)
	TNT1 A 0 ACS_NamedExecuteAlways("NormalSpeed",0,0,0,0)
	TNT1 A 0 A_Stop
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	PLA1 H 1
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 A_PlaySound("Player/Death",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	PLA1 H 10 
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_GiveInventory("ToReviveD",1)
	PLA1 IJKLMN 10 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)
	TNT1 AAAAA 0
	Goto DeathCheckScript
  DeathCheckScript:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_DeathCheckScript")

	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_JumpifInventory("AliveToken",1,"JumptoSpawn")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	PLA1 N 1 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)	//You should be able to call it in a loop now, as it will not run twice regardless
	Goto DeathCheckScript
  JumptoSpawn:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_JumptoSpawn")

	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_TakeInventory("AliveToken",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)	
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 A_GiveInventory("Health",100)	//*?
	P1WL A 1
	TNT1 A 0 A_TakeInventory("LifeToken",1)	//**
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ReviveBugfixInvulnerability",0,0,0,0)	//If all fails this should made the animation properly
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	Goto Spawn
  GameOver:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_GameOver")

	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_TakeInventory("ZekeToken",1)	//**
	P1GO A 1 A_GiveInventory("AlreadyDead",1)
	Goto GameOver+6
  AlreadyDead:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_AlreadyDead")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverHold",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	PLA1 N 1
	Loop
  TrampolineJump:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_TrampolineJump")
	P1JU BCD 4
	P1JU C 4
	P1JU B 4
	P1JU A 4
	Goto Spawn

  ////////////////////////////////////////
  //            Ghoul Patrol            //		//NEEDS UPDATING, DO AN UPDATE BEFORE IMPLEMENTING PROPERLY !!!!!!!!!!
  ////////////////////////////////////////

  GP_Spawn:
	TNT1 A 0 A_Log("GP_SPAWN")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIf(CallACS("IsFiring",0,0,0,0) == 1, "GP_Missile")
	TNT1 A 0 A_JumpIf(CallACS("IsMoving",0,0,0,0) == 1, "GP_See")
	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)
	TNT1 A 0 A_TakeInventory("ToReviveD",1)
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"GP_AlreadyDead")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GP_GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	P1GP A 4 
	TNT1 A 0 A_Log("GP_SPAWNSTILL")
	TNT1 AAA 0
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
    Goto Spawn
  GP_See:
	TNT1 A 0 A_Log("GP_SEE")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIf(CallACS("IsFiring",0,0,0,0) == 1, "GP_Missile")
	TNT1 A 0 A_JumpIf(CallACS("IsRunning",0,0,0,0) == 1, "GP_Run")
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)	
	
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	P1GP B 1 A_JumpIfInventory("GameOverToken",1,"GP_GameOver")
	P1GP B 1 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	P1GP B 1 A_JumpIfInventory("SpeedyToken",1,"GP_SeeSpeedy")
	P1GP B 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1GP C 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	P1GP C 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1GP D 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	P1GP D 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1GP E 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	P1GP E 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
    Goto Spawn
  GP_SeeSpeedy:
  GP_Run:
	TNT1 A 0 A_Log("GP_RUN")
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)	
	
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	P1GP F 1 A_JumpIfInventory("GameOverToken",1,"GP_GameOver")
	P1GP F 1 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP F 1 A_JumpIfInventory("SpeedyToken",1,"GP_SeeSpeedy")
	P1GP F 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1GP G 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP G 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	TNT1 A 0 A_JumpIf(CallACS("IsMoving") == 1, 1)			//if moving continue running, if not jump to the stop frame.
	Goto GP_RunStop

	P1GP H 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP H 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)

	P1GP I 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP I 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
    TNT1 A 0 A_JumpIf(CallACS("IsMoving") == 1, "Spawn")	//if moving continue running, if not do the stop frame.

  GP_RunStop:	
	TNT1 A 0 A_Log("GP_STOP")
	P1GP J 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP J 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	P1GP J 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP J 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_JumpIf(CallACS("IsMoving") == 1, "Spawn")
	P1GP J 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIf(CallACS("IsCrouching",0,0,0,0) == 1, "GP_Slide")
	P1GP J 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
    Goto Spawn
  GP_Slide:
	TNT1 A 0 A_Log("GP_SLIDE")
	TNT1 A 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetSlideForce",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetCameraSlidingOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_GiveInventory("GPSliding",1)
	TNT1 A 0 A_PlaySound("Player/GPSlide",2,100)
	TNT1 A 0 A_SetPitch(10)
	P1GP S 3 A_SpawnItemEx("GPPlayerDust")
	P1GP S 3 A_SpawnItemEx("GPPlayerDust")
	P1GP S 3 A_SpawnItemEx("GPPlayerDust")
	P1GP S 3 A_SpawnItemEx("GPPlayerDust")
	TNT1 A 0 A_SetPitch(0)
	TNT1 A 0 A_TakeInventory("GPSliding",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetCameraSlidingOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetInvulnerableOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	P1GP S 3 
    Goto Spawn
  GP_Missile:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,"GP_DeathCheckScript")
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GP_GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	
	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)

	P1GF A 1 //Wait for important checks before jumping to the rest

	TNT1 A 0 A_JumpIfInventory("CrossbowToken",1,"GP_Crossbow")
	//TNT1 A 0 A_JumpIfInventory("FalseFlag",1,"GP_FalseFlag") // < -- >  Fix WeedWacker premature firing
	//TNT1 A 0 A_JumpIfInventory("WRToken",1,"GP_Zeke_WaterRifle")			//	{                   }
	//TNT1 A 0 A_JumpIfInventory("BToken",1,"GP_Zeke_Bazooka")				//
	//TNT1 A 0 A_JumpIfInventory("SodaToken",1,"GP_Zeke_Soda")				//	Unique firing States
	//TNT1 A 0 A_JumpIfInventory("TomatoToken",1,"GP_Zeke_Tomato")			//
	//TNT1 A 0 A_JumpIfInventory("FEToken",1,"GP_Zeke_FireExtinguisher")		//
	//TNT1 A 0 A_JumpIfInventory("WeedWackerToken",1,"GP_Zeke_WeedWacker")	//	{                   }
	//TNT1 A 0 A_JumpIfInventory("CrucifixToken",1,"GP_Zeke_Crucifix")		//
	Goto Spawn
  GP_Crossbow:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)	
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 4
	Goto Spawn
  GP_Zeke_WaterRifle:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)	
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 6	
	P1GF A 6
	Goto Spawn
  GP_Zeke_Bazooka:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 5
	P1GF A 10
	Goto Spawn
  GP_Zeke_Soda:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 6
	P1GF A 4
	P1GF A 4
	Goto Spawn
  GP_Zeke_Tomato:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 4
	P1GF A 4
	Goto Spawn
  GP_Zeke_WeedWacker:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF AAA 2
	TNT1 A 0 A_JumpIfinventory("WW4",1,"Zeke_WeedWacker")
	Goto Spawn
  GP_Zeke_FireExtinguisher:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 4
	P1GF A 4
	Goto Spawn
  GP_Zeke_Crucifix:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)	
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P1GF A 20	
	Goto Spawn
  GP_Zeke_MonsterTransform:
	TNT1 A 0 
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_TakeInventory("GPSliding",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1MP ABCBCBDE 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO ABC 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 8 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 1 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_PlaySound("Monster/Growl",0,1.5)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphMonster",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	Goto Spawn
  GP_Pain:
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 A 0 A_TakeInventory("GPSliding",1)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)	
	TNT1 A 0 A_TakeInventory("FalseFlag",1)

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("GP_TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	P1GD Y 8 A_PlaySound("Player/Ouch",2,100)
	P1GD Z 8
	TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	Goto Spawn
  GP_Pain.RayHazard:
	TNT1 AA 0
	TNT1 A 0 A_Stop
  GP_Pain.FloorHazard:
    TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 ACS_NamedExecuteAlways("HazardPain",0,0,0,0)
	TNT1 A 0 A_TakeInventory("GPSliding",1)
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	PLA1 G 8 A_PlaySound("Player/Ouch",2,100)
	PLA1 H 8
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	Goto Spawn
  GP_TitanicStomp:
	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 //A_GiveInventory("IsStomped",1)	//Managed trough the StompedPain script
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_DamageSelf(10)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson2",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("StompedPain",0,0,0,0)
	FTZK A 33 A_PlaySound("Titanic/Stomp",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTZK A 1
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTZK A 1
	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 //A_ChangeFlag("NOPAIN",FALSE)	//Handled trough "StompedPain" script.
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"GP_DeathCheck")
	TNT1 AA 0 //A_TakeInventory("IsStomped",1)	//Managed by "StompedScript" now
	Goto Spawn
  GP_TitanicNoStomp:
	P1WL B 1 A_JumpIfInventory("GameOverToken",1,"GP_GameOver")
	P1WL B 1 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"GP_Zeke_MonsterTransform")	//Unnecesary ??
	P1WL B 1 A_JumpIfInventory("SpeedyToken",1,"GP_SeeSpeedy")
	P1WL B 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")
	P1WL C 3 A_JumpIfInventory("DoMonsterToken",1,"GP_Zeke_MonsterTransform")
	P1WL C 1 A_JumpIfInventory("Bouncing",1,"GP_TrampolineJump")
	Goto See+12
  GP_DeathCheck:
	TNT1 AA 0
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	P1GP A 1 //<- Important: [Gives time to the "HealthCheckHelper" to repair cummulative damage]
	TNT1 A 0 A_JumpIfHealthLower(2,1)
	Goto Pain

	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_GiveInventory("DeathChecking",1)	
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 A_TakeInventory("DoGhostToken",1)
	TNT1 A 0 A_TakeInventory("GPSliding",1)
	TNT1 A 0 A_TakeInventory("GooTimer",9999)
	TNT1 A 0 ACS_NamedExecuteAlways("NormalSpeed",0,0,0,0)
	TNT1 A 0 A_Stop
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1GP A 1
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 A_PlaySound("Player/Death",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1GD A 5 
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_GiveInventory("ToReviveD",1)
	P1GD BCDEFGHIJKLM 5 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 5
	TNT1 A 0 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)
	TNT1 AAAAA 0
	Goto GP_DeathCheckScript
  GP_DeathCheckScript:
	TNT1 A 0 
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_JumpifInventory("AliveToken",1,"JumptoSpawn")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 1 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)	//You should be able to call it in a loop now, as it will not run twice regardless
	Goto GP_DeathCheckScript
  GP_JumptoSpawn:
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_TakeInventory("AliveToken",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)	
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	P1GJ C 2
	P1GJ D 2
	P1GJ E 2
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	Goto Spawn
  GP_GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 1 A_GiveInventory("AlreadyDead",1)
	Goto GameOver+4
  GP_AlreadyDead:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_AlreadyDead")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverHold",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 1
	Loop
  GP_TrampolineJump:
	P1GJ ABC 4
	P1GJ C 4
	P1GJ D 4
	P1GJ E 4
	Goto Spawn

  }
}



ACTOR JULIE_PLAYER : ZAMN_PLAYER 
{
	Player.StartItem "WTRGUN_J", 1
	Player.StartItem "WTRGUN_J_Ammo", 150
	Player.StartItem "JulieTicket", 1
	//
	Player.StartItem "MedikitPickup", 1
	Player.StartItem "RadarActive", 1
	Player.StartItem "ScoreDeactive", 1
	Player.StartItem "ScoreNoCheck", 1
	Player.StartItem "LifeToken", 2
	
	Player.Startitem "SelectToken", 9999
	//
	Player.DisplayName "    "	//	Graphic:("PLAYER_J")
	Player.Portrait "CLPJUL01"
	//Player.CrouchSprite "P2GP"	//Universal no crouch sprite set
  States
  {

  ////////////////////////////////////////
  //      Zombies Ate My Neighbors      //
  ////////////////////////////////////////

  Spawn:
	TNT1 A 0 //
	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)
	TNT1 A 0 A_TakeInventory("GhostWeapon",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)
	TNT1 A 0 A_TakeInventory("ToReviveD",1)
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	PLAB A 4 
	TNT1 AAA 0
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
    Goto Spawn
  See:
	TNT1 A 0 
	TNT1 A 0 A_JumpIfInventory("AlreadyDead",1,"AlreadyDead")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,2)
	TNT1 A 0 A_JumpIfInventory("IsStomped",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	
	PLAB B 1 A_JumpIfInventory("GameOverToken",1,"GameOver")
	PLAB B 1 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB B 1 A_JumpIfInventory("SpeedyToken",1,"SeeSpeedy")
	PLAB B 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	PLAB C 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB C 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	PLAB D 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB D 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	PLAB E 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform") 
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
    PLAB E 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	Loop
  SeeSpeedy:
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	PLAB C 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB D 3 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB E 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	Goto Spawn
  Missile:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,"DeathCheckScript")
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	TNT1 A 0 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	TNT1 A 0 A_JumpIfInventory("IsTackled",1,"FootBallTackleFinal")
	TNT1 A 0 A_JumpIfInventory("BubbleTime",1,"MartianWait")
	
	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
  
	TNT1 A 0 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")

	TNT1 A 0 A_TakeInventory("MonsterFists",1)
	TNT1 A 0 A_TakeInventory("MonsterToken",1)
	TNT1 A 0 A_TakeInventory("GhostWeapon",1)
	
	PLAB A 1 //Wait for important checks before jumping to the rest
	
	TNT1 A 0 A_JumpIfInventory("FalseFlag",1,"FalseFlag") 		// < -- >  Fix WeedWacker premature firing
    TNT1 A 0 A_JumpIfInventory("WRToken",1,"Julie_WaterRifle")				//	{                   }
	TNT1 A 0 A_JumpIfInventory("BToken",1,"Julie_Bazooka")					//
	TNT1 A 0 A_JumpIfInventory("SodaToken",1,"Julie_Soda")					//	Unique firing States
	TNT1 A 0 A_JumpIfInventory("TomatoToken",1,"Julie_Tomato")				//
	TNT1 A 0 A_JumpIfInventory("FEToken",1,"Julie_FireExtinguisher")		//
	TNT1 A 0 A_JumpIfInventory("WeedWackerToken",1,"Julie_WeedWacker")		//	{                   }
	TNT1 A 0 A_JumpIfInventory("CrucifixToken",1,"Julie_Crucifix")			//
    Goto Spawn
  FalseFlag:
	PLAB A 4
	Goto Missile
  Julie_WaterRifle:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	PLAB F 6	
	PLAB F 6
	Goto Spawn
  Julie_Bazooka:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P2FB A 5
	P2FB B 10
	Goto Spawn
  Julie_Soda:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
    TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	PLAB A 6
	P2FS A 4
	P2FS B 4
	Goto Spawn
  Julie_Tomato:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P2FS A 4
	P2FS B 4
	Goto Spawn
  Julie_WeedWacker:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P2FW ABC 2
	TNT1 A 0 A_JumpIfinventory("WW4",1,"Julie_WeedWacker")
	Goto Spawn
  Julie_FireExtinguisher:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P2FE A 4
	P2FE A 4
	Goto Spawn
  Julie_Crucifix:
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)	//BUGFIX CAMERA 
	P2FC A 20	
	Goto Spawn
  Julie_MonsterTransform:
	TNT1 A 0 //GP

	TNT1 A 0 //A_GiveInventory("WeaponFixer",1)
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
    TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P2MP ABCBCBDE 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_Jump(256, "Player_MonsterFinal")	//<-- Generic
	Stop
/*
  Julie_MonsterFinal:
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TRMO ABC 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 8 A_ChangeFlag("INVULNERABLE",TRUE)
	TRMO D 1 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_PlaySound("Monster/Growl",0,1.5)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphMonster",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	Goto Spawn*/
  Julie_GhostTransform:
	//TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Zeke_MonsterTransform") 
	TNT1 A 0 //A_GiveInventory("WeaponFixer",1)
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoGhostToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)	//<-- Timed script [!]
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P2IP ABCBCBD 9 A_ChangeFlag("INVULNERABLE",TRUE)
  GhostFinal:
	P2IP E 0 A_Jump(256, "Player_GhostFinal")
	Stop
	/*
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	P2IP EFEFEF 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("MorphGhost",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsMonsterTransforming",1)
	Goto Spawn*/
  Julie_RandomTransform:
	//TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_Zeke_MonsterTransform") 
	TNT1 A 0 A_GiveInventory("IsMonsterTransforming",1)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")	//This prevents Morph if Dead
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
    TNT1 A 0 A_PlaySound("Player/ItemUse",0,100)
	TNT1 A 0 A_TakeInventory("DoRandomToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("HealthCount",0,0,0,0)
	//
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P2RP ABCBCBD 9 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_Jump(256, "Player_RandomDecide")
	Stop
  Pain.RedBlob:
	TNT1 AAAAAAAAAAA 0
	TNT1 A 0 A_JumpIf(CallACS("CheckGoo") == 1,"NoGoo")
	TNT1 A 0 A_JumpIfInventory("InWater",1,"NoGoo")
	TNT1 A 0 A_GiveInventory("GooTimer",280)
	TNT1 A 0 ACS_NamedExecuteAlways("GooDamage",0,0,0,0)
  NoGoo:
  Pain:
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)
	TNT1 A 0 A_TakeInventory("FalseFlag",1)

	TNT1 A 0 A_JumpIfInventory("JustStomped",1,2)
	TNT1 A 0 A_JumpIf(CallACS("TitanicFiring",72) == 1,1)
	TNT1 A 0 A_CheckProximity("TitanicStomp","TitanicToddler",72,1,CPXF_ANCESTOR|CPXF_CHECKSIGHT|CPXF_CLOSEST)
	
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	PLAB G 1 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	PLAB G 7 A_PlaySound("Player/Ouch",2,100)
	PLAB H 8
	TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	Goto Spawn
  Pain.RayHazard:
	TNT1 AA 0
	TNT1 A 0 A_Stop
  Pain.FloorHazard:
    TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 ACS_NamedExecuteAlways("HazardPain",0,0,0,0)
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	PLAB G 1 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)	// ITS OK TO HAVE THIS HERE ?
	PLAB G 7 A_PlaySound("Player/Ouch",2,100)
	PLAB H 8
	TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)  // ITS OK TO HAVE THIS HERE ?
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	Goto Spawn

  Pain.FootballTackle_Right:
	TNT1 A 0 ACS_NamedExecuteAlways("RotateAngleTo",0,180,0,0)//Set Looking Left
	Goto FootBallTackle
  Pain.FootballTackle_Left:
	TNT1 A 0 ACS_NamedExecuteAlways("RotateAngleTo",0,  0,0,0)//Set Looking Right
	Goto FootBallTackle
  FootBallTackle:
	TNT1 A 0 A_TakeInventory("BubbleTime",50) //Cancells bubble if not initiated fully
	TNT1 A 0 A_Stop
	TNT1 A 0 //A_Log("Tackle On")
	TNT1 A 0 A_GiveInventory("IsTackled",1)
	TNT1 A 0 A_GiveInventory("Health",1)
	TNT1 A 0 A_PlaySound("player/male/fist")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
  FootBallTackleFinal:
	P2HT A 25 //A_Recoil(12) //Handled by ACS now
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 //A_Log("Tackle Off")
	P2HT A 1
	TNT1 A 0 A_TakeInventory("IsTackled",1)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOff",0,0,0,0)
  Goto See
  
  Pain.Martian:
	TNT1 A 0 A_Stop
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetNoPain",0,0,0,0)
	TNT1 AA 0 ACS_NamedExecuteAlways("SetInvulnerableOn",0,0,0,0)
	TNT1 A 0 //A_Log("Bubble 1")
	TNT1 A 0 A_GiveInventory("BubbleTime",50)
	//Bubble animation
	MRTR BBCCDDEEFF 1 A_TakeInventory("BubbleTime",1)
  MartianWait:
	TNT1 A 0 //A_Log("Bubble 2")
	MRTR G 1 A_TakeInventory("BubbleTime",1)
	TNT1 A 0 A_JumpIfInventory("BubbleTime",7,"MartianWait")
	//Bubble breaking
	TNT1 A 0 //A_Log("Bubble 3")
	TNT1 A 0 A_TakeInventory("IsTackled",1)
	MRTR HHIIJJ 2 A_TakeInventory("BubbleTime",1)
	//TNT1 AA 0 ACS_NamedExecuteAlways("SetYesPain",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("PainInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	MRTR J 1
  Goto See

  TitanicStomp:
	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 //A_GiveInventory("IsStomped",1)	//Managed trough the StompedPain script
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_DamageSelf(10)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson2",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 A 0 A_GiveInventory("MediFirstUsed",1)	
	TNT1 A 0 A_TakeInventory("GoodHealthToken",1)
	TNT1 A 0 ACS_NamedExecuteAlways("StompedPain",0,0,0,0)
	FTJL A 33 A_PlaySound("Titanic/Stomp",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTJL A 1 
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	FTJL A 1
	TNT1 AA 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 //A_ChangeFlag("NOPAIN",FALSE)	//Handled trough "StompedPain" script.
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_JumpIfHealthLower(2,"DeathCheck")
	TNT1 AA 0 //A_TakeInventory("IsStomped",1)	//Managed by "StompedScript" now
	Goto Spawn
  TitanicNoStomp:
	PLAB B 1 A_JumpIfInventory("GameOverToken",1,"GameOver")
	PLAB B 1 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB B 1 A_JumpIfInventory("SpeedyToken",1,"SeeSpeedy")
	PLAB B 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	PLAB C 3 A_JumpIfInventory("DoMonsterToken",1,"Julie_MonsterTransform")
	TNT1 A 0 A_JumpIfInventory("DoGhostToken",1,"Julie_GhostTransform")
	TNT1 A 0 A_JumpIfInventory("DoRandomToken",1,"Julie_RandomTransform")
	PLAB C 1 A_JumpIfInventory("Bouncing",1,"TrampolineJump")
	Goto See+13
  DeathCheck:
	TNT1 AA 0	//Ghoul Patrol Check

	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	PLAB A 2 //<- Important: [Gives time to the "HealthCheckHelper" to repair cummulative damage]
	//TNT1 A 0 A_Log("Should be dead")
	TNT1 A 0 A_JumpIfHealthLower(2,1)
	Goto Pain

	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 A_ChangeFlag("INVULNERABLE",TRUE)
	TNT1 A 0 A_GiveInventory("DeathChecking",1)
	TNT1 A 0 A_TakeInventory("WeedWackerToken",1)
	TNT1 A 0 A_TakeInventory("DoMonsterToken",1)
	TNT1 A 0 A_TakeInventory("DoGhostToken",1)
	TNT1 A 0 A_TakeInventory("DoRandomToken",1)
	TNT1 A 0 A_TakeInventory("GooTimer",9999)
	TNT1 A 0 ACS_NamedExecuteAlways("NormalSpeed",0,0,0,0)
	TNT1 A 0 A_Stop
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	PLAB I 1
	TNT1 A 0 A_JumpIfInventory("DeathChecking",1,1)
	TNT1 A 0 A_PlaySound("Player/Death",2,100)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
    PLAB I 10 
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_GiveInventory("ToReviveD",1)  
    PLAB JKLMNNOPQ 10 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0
	TNT1 A 0 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)
	TNT1 AAAAA 0
	Goto DeathCheckScript
  DeathCheckScript:
	TNT1 A 0 
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_JumpifInventory("AliveToken",1,"JumptoSpawn")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	PLAB Q 1 ACS_NamedExecuteAlways("LifeCheckScript",0,0,0,0)	//You should be able to call it in a loop now, as it will not run twice regardless
	Goto DeathCheckScript
  JumptoSpawn:
	TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_JumptoSpawn")

	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_TakeInventory("AliveToken",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)
	TNT1 A 0 A_TakeInventory("DeathChecking",1)	
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 A_TakeInventory("IsStomped",1)
	TNT1 A 0 A_GiveInventory("Health",100)	//*?
	PLAB A 1
	TNT1 A 0 A_TakeInventory("LifeToken",1)	//**
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOff",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ReviveBugfixInvulnerability",0,0,0,0)	//If all fails this should made the animation properly
	TNT1 A 0 ACS_NamedExecuteAlways("FirstPerson",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",FALSE)
	Goto Spawn
  GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	TNT1 A 0 A_TakeInventory("JulieToken",1)	//**
	P2GO A 1 A_GiveInventory("AlreadyDead",1)
	Goto GameOver+4
   AlreadyDead:
	//TNT1 AA 0 A_JumpIfInventory("Ghoul_Mod",1,"GP_AlreadyDead")
	TNT1 A 0 ACS_NamedExecuteAlways("SetFrozenOn",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverHold",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	PLAB Q 1
	Loop
  TrampolineJump:
	P2JU BCD 4
	P2JU C 4
	P2JU B 4
	P2JU A 4
	Goto Spawn

  ////////////////////////////////////////
  //            Ghoul Patrol            //
  ////////////////////////////////////////


  }
}



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////



ACTOR ZEKE_MONSTER : ZEKE_PLAYER//ZAMN_PLAYER
{						//MonsterPlayer has to inherit from Zeke's/Julie's Player Class and not from base ZAMN Class.
	Speed 0.570			//This is because by doing it this way you also inherit Zeke's/Julie's inventory management and allows it to pickup weapons.
	Mass 1000
	PainChance 1
	Friction 0.99999999999999999999999990000

	Player.DisplayName "Zeke_Monster"
	Player.StartItem "ZekeTicket", 1
	Player.StartItem "MonsterTicket"
	Player.MorphWeapon "MonsterFists"	//<-- IMPORTANT
	Player.JumpZ 3
	+INVULNERABLE			
	+NOPAIN
	States
  {
  Spawn:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	MNSZ A 5
	Goto Static
  See:
    TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	MNSZ ABCDE 4
    Goto See
  Static:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	MNSZ A 2
	Goto Spawn
  Missile:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    MNSZ GH 8
	Goto Spawn
  Pain:
	MNSZ A 1
	Goto Spawn
  GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	MZGO A 1
	Goto GameOver+4
  Death:
    MNSZ A 1 
	Goto Spawn
  }
}

ACTOR JULIE_MONSTER : JULIE_PLAYER//ZAMN_PLAYER
{						//MonsterPlayer has to inherit from Zeke's/Julie's Player Class and not from base ZAMN Class.
	Speed 0.570			//This is because by doing it this way you also inherit Zeke's/Julie's inventory management and allowing to pickup weapons.
	Mass 1000
	PainChance 1
	Friction 0.99999999999999999999999990000

	Player.DisplayName "Julie_Monster"
	Player.StartItem "JulieTicket", 1
	//Player.StartItem "MonsterTicket"
	Player.MorphWeapon "MonsterFists"	//<-- IMPORTANT
	Player.JumpZ 3
	+INVULNERABLE			
	+NOPAIN
	States
  {
  Spawn:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	MNSJ A 5
	Goto Static
  See:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    MNSJ ABCDE 4
    Goto See
  Static:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	MNSJ A 2
	Goto Spawn
  Missile:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    MNSJ GH 8
	Goto Spawn
  Pain:
	MNSJ A 1
	Goto Spawn
  GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	MJGO A 1
	Goto GameOver+4
  Death:
    MNSJ A 1 
	Goto Spawn
  }
}

ACTOR ZEKE_GHOST : ZEKE_PLAYER		//GhostPlayer has to inherit from Zeke's/Julie's Player Class and not from base ZAMN Class.
{									//This is because by doing it this way you also inherit Zeke's/Julie's inventory management and allows it to pickup weapons.
	PainChance 1
	Player.DisplayName "Zeke_Ghost"
	Player.StartItem "ZekeTicket", 1
	//Player.StartItem "MonsterTicket"
	Player.MorphWeapon "GhostWeapon"	//<-- IMPORTANT
	Player.JumpZ 3
	+INVULNERABLE			
	+NOPAIN
	//-SOLID
	States
  {
  Spawn:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P1GH A 5
	Goto Static
  See:
    TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P1GH ABCDE 4
    Goto See
  Static:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P1GH A 2
	Goto Spawn
  Missile:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    P1GH A 1
	Goto Spawn
  Pain:
	P1GH A 1
	Goto Spawn
  GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P1GH A 1	//WIP
	Goto GameOver+4
  Death:
    P1GH A 1 
	Goto Spawn
  }
}

ACTOR JULIE_GHOST : JULIE_PLAYER	//GhostPlayer has to inherit from Zeke's/Julie's Player Class and not from base ZAMN Class.
{									//This is because by doing it this way you also inherit Zeke's/Julie's inventory management and allowing to pickup weapons.
	PainChance 1
	Player.DisplayName "Julie_Ghost"
	Player.StartItem "JulieTicket", 1
	Player.StartItem "MonsterTicket"
	Player.MorphWeapon "GhostWeapon"	//<-- IMPORTANT
	Player.JumpZ 3
	+INVULNERABLE			
	+NOPAIN
	//-SOLID
	States
  {
  Spawn:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P2GH A 5
	Goto Static
  See:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    P2GH ABCDE 4
    Goto See
  Static:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
	P2GH A 2
	Goto Spawn
  Missile:
	TNT1 A 0 A_JumpIfInventory("GameOverToken",1,"GameOver")
    P2GH A 1
	Goto Spawn
  Pain:
	P2GH A 1
	Goto Spawn
  GameOver:
	TNT1 A 0 ACS_NamedExecuteAlways("StopMomentum",0,0,0,0)
	TNT1 A 0 A_ChangeFlag("NOPAIN",TRUE)
	TNT1 A 0 ACS_NamedExecuteAlways("DyingInvulnerability",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("GameOverSimple",0,0,0,0)
	TNT1 A 0 ACS_NamedExecuteAlways("ThirdPerson",0,0,0,0)
	P2GH A 1	//WIP
	Goto GameOver+4
  Death:
    P2GH A 1 
	Goto Spawn
  }
}

//Actor Flash for the Monster Transformation
Actor NoFlash
{
RenderStyle None
States
	{
	Spawn:
	TNT1 A 1
	Stop
	}
}




//Unused , merged now on to the main ZEKE/JULIE player class
//Keep as reference
/*
ACTOR ZEKEGP_PLAYER : ZEKE_PLAYER
{
	Speed 0.53
	Player.DisplayName " ."	//	Graphic:("PLAYER_Z")
	Player.StartItem "CROSSBOW_ZEKE", 1
	Player.StartItem "Ghoul_Mod", 1
	Player.StartItem "ZekeTicket", 1
	//
	Player.StartItem "MedikitPickup", 1
	Player.StartItem "RadarActive", 1
	Player.StartItem "ScoreDeactive", 1
	Player.StartItem "ScoreNoCheck", 1
	Player.StartItem "LifeToken", 2
	
	Player.Startitem "SelectToken", 9999
	//
	Player.JumpZ 8
	Player.Portrait "CLPZEK01"
}


ACTOR JULIEGP_PLAYER : JULIE_PLAYER
{
	Speed 0.53
	Player.DisplayName "    -"	//	Graphic:("PLAYER_J")
	Player.StartItem "CROSSBOW_JULIE", 1
	Player.StartItem "Ghoul_Mod", 1
	Player.StartItem "JulieTicket", 1
	//
	Player.StartItem "MedikitPickup", 1
	Player.StartItem "RadarActive", 1
	Player.StartItem "ScoreDeactive", 1
	Player.StartItem "ScoreNoCheck", 1
	Player.StartItem "LifeToken", 2
	
	Player.Startitem "SelectToken", 9999
	//
	Player.JumpZ 8
	Player.Portrait "CLPJUL01"
}
*/









////////////////////////////////////////////////////////////
////                       TOKENS                       ////
////////////////////////////////////////////////////////////

// Note: Some of this tokens where added as debug and then I stopped using them 
// but I forgot why where they needed for, I need to clean this at some point...



// Live System Tokens:
//--------------------

Actor GeneralToken : Inventory
{	Inventory.MaxAmount 1	}

Actor DedToken : GeneralToken		{}
Actor AliveToken : GeneralToken		{}
Actor IsDead : GeneralToken			{}
Actor GameOverToken : GeneralToken	{}
Actor ToReviveD : GeneralToken		{}
Actor ToReviveS : GeneralToken		{}


// This token is ammo so it should appear in the inventory
// if the player pressed "IDFA" or "IDKFA" 
Actor CheaterToken : Ammo 	 
{							
Inventory.MaxAmount 1
States
  {
	Spawn:
	TNT1 A 0
	stop
  }
}



// Aspect Ratio Tokens:
//---------------------

Actor AspectBase : Inventory
{Inventory.MaxAmount 1}

Actor AspectRatio4_3 : AspectBase	{}
Actor AspectRatio5_4 : AspectBase	{}
Actor AspectRatio16_9 : AspectBase	{Inventory.MaxAmount 2}
Actor AspectRatio16_10 : AspectBase	{}
Actor AspectRatio17_10 : AspectBase	{}
Actor AspectRatio21_9 : AspectBase	{}
Actor AspectRatioOther : AspectBase	{}

// Player Class Tokens:
//---------------------

Actor ZekeTicket: GeneralToken		{}
Actor ZekeToken : GeneralToken		{}

Actor JulieTicket : GeneralToken	{}
Actor JulieToken : GeneralToken		{}

Actor MonsterTicket : GeneralToken		{}
Actor MonsterToken : GeneralToken		{}
Actor MonsterTime : Inventory			{	Inventory.MaxAmount 2100	}
Actor MonsterUnmorphing : GeneralToken	{	Inventory.MaxAmount 5	}

Actor GhostTicket : GeneralToken		{}
Actor GhostToken : GeneralToken		{}
Actor GhostTime : Inventory			{	Inventory.MaxAmount 2100	}
Actor GhostUnmorphing : GeneralToken	{	Inventory.MaxAmount 5	}


// Easter Egg Tokens:
//-------------------
Actor Ghoul_Mod : GeneralToken		{}
Actor Smash_Mod : GeneralToken		{}
Actor ZekeGPToken : GeneralToken	{}
Actor JulieGPToken : GeneralToken	{}
Actor GPRunning : GeneralToken		{	Inventory.MaxAmount 2		}
Actor GPSliding : GeneralToken		{}

// Varied Checks Tokens:
//----------------------

Actor DeathChecking : GeneralToken			{}
Actor IsMonsterTransforming : GeneralToken	{}
Actor IsStomped : GeneralToken				{}	//StompedAnimation, to stop other scripts overriding it
Actor JustStomped : GeneralToken			{}	//StompedPain, to stop jumping again to Stomped when the player should be invulnerable
Actor BazookaInvul : GeneralToken			{}

Actor SpectatorMode: GeneralToken			{}

Actor NoHelper : GeneralToken				{}

Actor InWater : Inventory					{	Inventory.MaxAmount 7		}
Actor NoRepeat : GeneralToken				{}
Actor NoPainToken : GeneralToken			{}
Actor InHazardF : GeneralToken				{}
Actor RadarActive : GeneralToken			{}
Actor RadarDeactive : GeneralToken			{}
Actor ScorePoints : Inventory				{	Inventory.MaxAmount 9999999	}
Actor ScoreActive : GeneralToken			{}
Actor ScoreDeactive : GeneralToken			{}
Actor ScoreNoCheck : GeneralToken			{}
Actor ScoreShow : GeneralToken				{}
Actor StopMusic : GeneralToken				{}
Actor DeadAnimation : GeneralToken			{}
Actor AlreadyDead : GeneralToken			{}

Actor GeneralTimer : 			GeneralToken	{}
Actor CheerleaderCountdown : 	GeneralToken	{}
Actor BabyCountdown : 			GeneralToken	{}
Actor DogCountdown : 			GeneralToken	{}
Actor WolfCountdown : 			GeneralToken	{}
Actor ZombieCountdown : 		GeneralToken	{}

Actor GeneralGoal : 			GeneralToken 	{}

Actor GooTimer : Inventory			{	Inventory.MaxAmount 280		}
Actor GooToken : GeneralToken		{}
Actor IsBubble : GeneralToken		{}
Actor IsTackled : GeneralToken		{}
Actor BubbleTime : GeneralToken		{	Inventory.MaxAmount 50		}

